```python
import sys
import bisect

input = sys.stdin.read
data = input().split()

N = int(data[0])
S = int(data[1])

jobs = []
for i in range(N):
    l = int(data[3*i+2])
    r = int(data[3*i+3])
    c = int(data[3*i+4])
    jobs.append((l, r, c))

jobs.sort(key=lambda x: x[1])

dp = []
profit_end_day = []

def get_max_profit_before_day(day):
    idx = bisect.bisect_right(profit_end_day, day) - 1
    if idx == -1:
        return 0
    else:
        return dp[idx]

for l, r, c in jobs:
    days_worked = r - l + 1
    profit_working_current = S * days_worked - c
    max_profit_before = get_max_profit_before_day(l - 1)
    total_profit = max_profit_before + profit_working_current
    
    if not dp or total_profit > dp[-1]:
        dp.append(total_profit)
        profit_end_day.append(r)

print(dp[-1] if dp else 0)
```