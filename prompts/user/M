No reino de Quadradˆonia, o monarca quer rever todas as tarifas aéreas. Para isso, pediu ao seu contador uma tabela com as propostas de novos preços. Todavia, o monarca estudou no Instituto de Computação e Programação de Chapecó (ICPC) e tem conhecimento suficiente para exigir coerência na tabela. A tabela é coerente se nenhuma rota com escalas é mais barata do que o voo direto. Verificada a coerência da tabela, o monarca gostaria de diminuir o número de voos diretos, sem contudo aumentar os custos das viagens. Seu problema é verificar a coerência da tabela e, sendo esta coerente, informar ao monarca quantas voos diretos podem ser eliminados sem encarecer o custo de qualquer viagem. Entrada A primeira linha contém N (1 ≤ N ≤ 100), que é o número de cidades da Quadradˆonia servidas por voos. Existem então mais N linhas, L1, L2, . . . , LN . A linha Li contém N inteiros, Ci1, Ci2, . . . , CiN , onde Cij é o custo do voo direto entre as cidades i e j. O custo de ida e de volta entre duas cidades é sempre igual, ou seja, Cij = Cji, para todos os pares {i, j} tais que 1 ≤ i ≤ N e 1 ≤ j ≤ N. Quando i = j, Cij = 0. Quando i ̸= j, 1 ≤ Cij ≤ 103 . Saída Imprima uma linha contendo um inteiro. Se a tabela for incoerente, o inteiro deve ser igual a -1. Se a tabela for coerente, o inteiro deve ser igual ao maior número de voos diretos que podem ser removidos sem aumento nos custos das viagens para os passageiros. Exemplo de entrada 1\n3\n0 1 2\n1 0 1\n2 1 0\nExemplo de saída 1\n1\nExemplo de entrada 2\n3\n0 2 2\n2 0 2\n2 2 0\nExemplo de saída 2\n0\nExemplo de entrada 3\n3\n0 2 9\n2 0 2\n9 2 0\nExemplo de saída 3\n-1\n