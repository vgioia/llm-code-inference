```python
import sys

def floyd_warshall(matrix, n):
    dist = [row[:] for row in matrix]
    for k in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i][j] > dist[i][k] + dist[k][j]:
                    dist[i][j] = dist[i][k] + dist[k][j]
    return dist

def main():
    input = sys.stdin.read
    data = input().split()
    
    index = 0
    N = int(data[index])
    index += 1
    
    matrix = []
    for i in range(N):
        row = [int(data[index + j]) for j in range(N)]
        matrix.append(row)
        index += N
    
    dist = floyd_warshall(matrix, N)
    
    for i in range(N):
        for j in range(N):
            if matrix[i][j] > dist[i][j]:
                print(-1)
                return
    
    remove_count = 0
    for i in range(N):
        for j in range(i + 1, N):
            direct_flight = matrix[i][j]
            can_remove = False
            for k in range(N):
                if k != i and k != j and dist[i][k] + dist[k][j] == direct_flight:
                    can_remove = True
                    break
            if can_remove:
                remove_count += 1
    
    print(remove_count)

if __name__ == "__main__":
    main()
```